// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fragment = require("./Fragment.bs.js");
var ApolloClient__React_Hooks_UseQuery = require("reason-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.bs.js");

var Raw = {};

var query = ((frag_0) => require("@apollo/client").gql`
  query WorkspaceQuery($userId: String!)  {
    workspace(id: "123")  {
      ...UserData
    }
  }
  ${frag_0}
`)(Fragment.UserData.query);

function parse(value) {
  var value$1 = value.workspace;
  return {
          workspace: Fragment.UserData.verifyArgsAndParse("NonNull_String", "UserData", value$1)
        };
}

function serialize(value) {
  var value$1 = value.workspace;
  var workspace = Fragment.UserData.serialize(value$1);
  return {
          workspace: workspace
        };
}

function serializeVariables(inp) {
  return {
          userId: inp.userId
        };
}

function makeVariables(userId, param) {
  return {
          userId: userId
        };
}

var Query_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var Query_refetchQueryDescription = include.refetchQueryDescription;

var Query_use = include.use;

var Query_useLazy = include.useLazy;

var Query_useLazyWithVariables = include.useLazyWithVariables;

var Query = {
  Query_inner: Query_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  refetchQueryDescription: Query_refetchQueryDescription,
  use: Query_use,
  useLazy: Query_useLazy,
  useLazyWithVariables: Query_useLazyWithVariables
};

exports.Query = Query;
/* query Not a pure module */
